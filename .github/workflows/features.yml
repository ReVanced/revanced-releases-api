name: Build a feature branch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch'
        required: true
        default: ''

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  security_checks:
    runs-on: ubuntu-latest
    name: Security check
    steps:
      - uses: actions/checkout@v3
      - name: Security Checks (PyCharm Security)
        uses: tonybaloney/pycharm-security@master
        with:
          path: .

  build:
    needs: security_checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Dockerfile
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/heads/main') }}
            suffix=-${{ github.sha }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build_spheron:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Dockerfile
        id: checkout
        uses: actions/checkout@v3
      
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        id: dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Spheron Docker image
        id: build_spheron
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Spheron.Dockerfile
          platforms: linux/amd64
          cache-to: type=gha,mode=max,ignore-error=true
          cache-from: type=gha
          push: false
          tags: revanced/revanced-releases-api:latest
